// Code generated by MockGen. DO NOT EDIT.
// Source: tcp-pow/internal/handlers (interfaces: QuoteHandler)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockQuoteHandler is a mock of QuoteHandler interface.
type MockQuoteHandler struct {
	ctrl     *gomock.Controller
	recorder *MockQuoteHandlerMockRecorder
}

// MockQuoteHandlerMockRecorder is the mock recorder for MockQuoteHandler.
type MockQuoteHandlerMockRecorder struct {
	mock *MockQuoteHandler
}

// NewMockQuoteHandler creates a new mock instance.
func NewMockQuoteHandler(ctrl *gomock.Controller) *MockQuoteHandler {
	mock := &MockQuoteHandler{ctrl: ctrl}
	mock.recorder = &MockQuoteHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockQuoteHandler) EXPECT() *MockQuoteHandlerMockRecorder {
	return m.recorder
}

// GetQuote mocks base method.
func (m *MockQuoteHandler) GetQuote() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetQuote")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetQuote indicates an expected call of GetQuote.
func (mr *MockQuoteHandlerMockRecorder) GetQuote() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetQuote", reflect.TypeOf((*MockQuoteHandler)(nil).GetQuote))
}
